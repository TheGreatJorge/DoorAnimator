//Main HatchDoor animating proc
//bframe two bottom parts
//tframe two top parts
//tlframe top-left part
//trframe top-right part
//blframe bottom-left part
//brframe bottom-right part
/proc/HatchDoorAnimator(dmifile as icon)
	var/icon/corners = icon(base_door)
	corners.DrawBox(null, 7, 32, 26, 32)
	corners.DrawBox(null, 6, 31, 27, 31)
	corners.DrawBox(null, 5, 30, 28, 30)
	corners.DrawBox(null, 4, 29, 29, 29)
	corners.DrawBox(null, 3, 28, 30, 28)
	corners.DrawBox(null, 2, 27, 31, 27)
	corners.DrawBox(null, 1, 26, 32, 7)
	corners.DrawBox(null, 2, 6, 31, 6)
	corners.DrawBox(null, 3, 5, 30, 5)
	corners.DrawBox(null, 4, 4, 29, 4)
	corners.DrawBox(null, 5, 3, 28, 3)
	corners.DrawBox(null, 6, 2, 27, 2)
	corners.DrawBox(null, 7, 1, 26, 1)
	if(closing)
		outputIcon += icon(filename)
		var/icon/frame = icon(base_door)
		if(greenlight){frame.Blend(HDgreen,ICON_OVERLAY,1,1)}
		if(redlight){frame.Blend(HDred,ICON_OVERLAY,1,1)}
		outputIcon.Insert(frame, statename, frame = 13, delay = 1.8)
		var/icon/tframe = icon(base_door)
		tframe.DrawBox(null, 1, 15, 4, 1)
		tframe.DrawBox(null, 5, 16, 12, 1)
		tframe.DrawBox(null, 13, 15, 15, 1)
		tframe.DrawBox(null, 16, 16, 20, 1)
		tframe.DrawBox(null, 21, 15, 28, 1)
		tframe.DrawBox(null, 29, 16, 32, 1)
		tframe.DrawBox(null, 1, 32, 32, 32)
		tframe.Shift(NORTH, 1)
		var/icon/bframe = icon(base_door)
		bframe.DrawBox(null, 1, 17, 4, 32)
		bframe.DrawBox(null, 5, 18, 12, 32)
		bframe.DrawBox(null, 13, 17, 17, 32)
		bframe.DrawBox(null, 16, 18, 20, 32)
		bframe.DrawBox(null, 21, 17, 28, 32)
		bframe.DrawBox(null, 29, 18, 32, 32)
		bframe.DrawBox(null, 1, 1, 32, 1)
		bframe.Shift(SOUTH, 1)
		tframe.Blend(bframe,ICON_OVERLAY,1,1)
		tframe.Blend(corners,ICON_OVERLAY,1,1)
		if(greenlight){tframe.Blend(HDgreen,ICON_OVERLAY,1,1)}
		if(redlight){tframe.Blend(HDred,ICON_OVERLAY,1,1)}
		outputIcon.Insert(tframe, statename, frame = 12, delay = 1.2)
		for(FRAME_N2 = 11, FRAME_N2 > 0, FRAME_N2--)
			outputIcon += icon(filename)
			var/icon/tlframe = icon(base_door)
			tlframe.DrawBox(null, 1, 15, 32, 1)
			tlframe.DrawBox(null, 5, 16, 12, 16)
			tlframe.DrawBox(null, 16, 16)
			tlframe.DrawBox(null, 18, 32, 32, 16)
			tlframe.DrawBox(null, 17, 16, 17, 20)
			tlframe.DrawBox(null, 17, 29, 17, 32)
			tlframe.DrawBox(null, 1, 32, FRAME_N1, 1)
			tlframe.DrawBox(null, 1, 32, 32, 33 - FRAME_N1)
			tlframe.Shift(NORTH, FRAME_N1)
			tlframe.Shift(WEST, FRAME_N1)
			var/icon/blframe = icon(base_door)
			blframe.DrawBox(null, 1, 18, 32, 32)
			blframe.DrawBox(null, 1, 17, 4, 17)
			blframe.DrawBox(null, 13, 17, 17, 17)
			blframe.DrawBox(null, 17, 16)
			blframe.DrawBox(null, 18, 17, 32, 1)
			blframe.DrawBox(null, 17, 5, 17, 12)
			blframe.DrawBox(null, 1, 1, FRAME_N1, 32)
			blframe.DrawBox(null, 1, 1, 32, FRAME_N1)
			blframe.Shift(SOUTH, FRAME_N1)
			blframe.Shift(WEST, FRAME_N1)
			var/icon/trframe = icon(base_door)
			trframe.DrawBox(null, 1, 32, 15, 1)
			trframe.DrawBox(null, 16, 28, 16, 21)
			trframe.DrawBox(null, 16, 17)
			trframe.DrawBox(null, 16, 15, 32, 1)
			trframe.DrawBox(null, 16, 16, 20, 16)
			trframe.DrawBox(null,29, 16, 32, 16)
			trframe.DrawBox(null, 32, 32, 33 - FRAME_N1, 1)
			trframe.DrawBox(null, 32, 32, 1, 33 - FRAME_N1)
			trframe.Shift(NORTH, FRAME_N1)
			trframe.Shift(EAST, FRAME_N1)
			var/icon/brframe = icon(base_door)
			brframe.DrawBox(null, 1, 1, 15, 32)
			brframe.DrawBox(null, 16, 1, 16, 4)
			brframe.DrawBox(null, 16, 13, 16, 17)
			brframe.DrawBox(null, 17, 17)
			brframe.DrawBox(null, 21, 17, 28, 17)
			brframe.DrawBox(null, 16, 32, 32, 18)
			brframe.DrawBox(null, 32, 1, 1, FRAME_N1)
			brframe.DrawBox(null, 32, 1, 33 - FRAME_N1, 32)
			brframe.Shift(SOUTH, FRAME_N1)
			brframe.Shift(EAST, FRAME_N1)
			tlframe.Blend(trframe,ICON_OVERLAY,1,1)
			tlframe.Blend(blframe,ICON_OVERLAY,1,1)
			tlframe.Blend(brframe,ICON_OVERLAY,1,1)
			tlframe.Blend(corners,ICON_OVERLAY,1,1)
			if(greenlight){tlframe.Blend(HDgreen,ICON_OVERLAY,1,1)}
			if(redlight){tlframe.Blend(HDred,ICON_OVERLAY,1,1)}
			switch(FRAME_N2)
				if(1)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 2.1)
				if(2)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 1.2)
				if(3,11)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 1.1)
				if(9,10)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 1)
				if(8)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 0.8)
				if(4,5,7)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 0.7)
				if(6)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 0.6)
			FRAME_N1++
		fcopy(outputIcon, "Output/[filename]")
	else
		var/icon/frame = icon(base_door)
		if(greenlight){frame.Blend(HDgreen,ICON_OVERLAY,1,1)}
		if(redlight){frame.Blend(HDred,ICON_OVERLAY,1,1)}
		outputIcon.Insert(frame, statename, frame = 1, delay = 2.1)
		var/icon/tframe = icon(base_door)
		tframe.DrawBox(null, 1, 15, 4, 1)
		tframe.DrawBox(null, 5, 16, 12, 1)
		tframe.DrawBox(null, 13, 15, 15, 1)
		tframe.DrawBox(null, 16, 16, 20, 1)
		tframe.DrawBox(null, 21, 15, 28, 1)
		tframe.DrawBox(null, 29, 16, 32, 1)
		tframe.DrawBox(null, 1, 32, 32, 32)
		tframe.Shift(NORTH, 1)
		var/icon/bframe = icon(base_door)
		bframe.DrawBox(null, 1, 17, 4, 32)
		bframe.DrawBox(null, 5, 18, 12, 32)
		bframe.DrawBox(null, 13, 17, 17, 32)
		bframe.DrawBox(null, 16, 18, 20, 32)
		bframe.DrawBox(null, 21, 17, 28, 32)
		bframe.DrawBox(null, 29, 18, 32, 32)
		bframe.DrawBox(null, 1, 1, 32, 1)
		bframe.Shift(SOUTH, 1)
		tframe.Blend(bframe,ICON_OVERLAY,1,1)
		tframe.Blend(corners,ICON_OVERLAY,1,1)
		if(greenlight){tframe.Blend(HDgreen,ICON_OVERLAY,1,1)}
		if(redlight){tframe.Blend(HDred,ICON_OVERLAY,1,1)}
		outputIcon.Insert(tframe, statename, frame = 2, delay = 1.2)
		for(FRAME_N2 = 3, FRAME_N2 < 14, FRAME_N2++)
			outputIcon += icon(filename)
			var/icon/tlframe = icon(base_door)
			tlframe.DrawBox(null, 1, 15, 32, 1)
			tlframe.DrawBox(null, 5, 16, 12, 16)
			tlframe.DrawBox(null, 16, 16)
			tlframe.DrawBox(null, 18, 32, 32, 16)
			tlframe.DrawBox(null, 17, 16, 17, 20)
			tlframe.DrawBox(null, 17, 29, 17, 32)
			tlframe.DrawBox(null, 1, 32, FRAME_N1, 1)
			tlframe.DrawBox(null, 1, 32, 32, 33 - FRAME_N1)
			tlframe.Shift(NORTH, FRAME_N1)
			tlframe.Shift(WEST, FRAME_N1)
			var/icon/blframe = icon(base_door)
			blframe.DrawBox(null, 1, 18, 32, 32)
			blframe.DrawBox(null, 1, 17, 4, 17)
			blframe.DrawBox(null, 13, 17, 17, 17)
			blframe.DrawBox(null, 17, 16)
			blframe.DrawBox(null, 18, 17, 32, 1)
			blframe.DrawBox(null, 17, 5, 17, 12)
			blframe.DrawBox(null, 1, 1, FRAME_N1, 32)
			blframe.DrawBox(null, 1, 1, 32, FRAME_N1)
			blframe.Shift(SOUTH, FRAME_N1)
			blframe.Shift(WEST, FRAME_N1)
			var/icon/trframe = icon(base_door)
			trframe.DrawBox(null, 1, 32, 15, 1)
			trframe.DrawBox(null, 16, 28, 16, 21)
			trframe.DrawBox(null, 16, 17)
			trframe.DrawBox(null, 16, 15, 32, 1)
			trframe.DrawBox(null, 16, 16, 20, 16)
			trframe.DrawBox(null,29, 16, 32, 16)
			trframe.DrawBox(null, 32, 32, 33 - FRAME_N1, 1)
			trframe.DrawBox(null, 32, 32, 1, 33 - FRAME_N1)
			trframe.Shift(NORTH, FRAME_N1)
			trframe.Shift(EAST, FRAME_N1)
			var/icon/brframe = icon(base_door)
			brframe.DrawBox(null, 1, 1, 15, 32)
			brframe.DrawBox(null, 16, 1, 16, 4)
			brframe.DrawBox(null, 16, 13, 16, 17)
			brframe.DrawBox(null, 17, 17)
			brframe.DrawBox(null, 21, 17, 28, 17)
			brframe.DrawBox(null, 16, 32, 32, 18)
			brframe.DrawBox(null, 32, 1, 1, FRAME_N1)
			brframe.DrawBox(null, 32, 1, 33 - FRAME_N1, 32)
			brframe.Shift(SOUTH, FRAME_N1)
			brframe.Shift(EAST, FRAME_N1)
			tlframe.Blend(trframe,ICON_OVERLAY,1,1)
			tlframe.Blend(blframe,ICON_OVERLAY,1,1)
			tlframe.Blend(brframe,ICON_OVERLAY,1,1)
			tlframe.Blend(corners,ICON_OVERLAY,1,1)
			if(greenlight){tlframe.Blend(HDgreen,ICON_OVERLAY,1,1)}
			if(redlight){tlframe.Blend(HDred,ICON_OVERLAY,1,1)}
			switch(FRAME_N2)
				if(13)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 1.8)
				if(12)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 1.2)
				if(3,11)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 1.1)
				if(9,10)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 1)
				if(8)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 0.8)
				if(4,5,7)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 0.7)
				if(6)outputIcon.Insert(tlframe, statename, frame = FRAME_N2, delay = 0.6)
			FRAME_N1++
		fcopy(outputIcon, "Output/[filename]")
	FRAME_N1 = 1 //reset values for next icon
	FRAME_N2 = 1
	greenlight = 0
	redlight = 0
	closing = 0

//secondary proc for generating opened door icon
/proc/HatchDoorOpenState(dmifile as icon)
	outputIcon += icon(filename)
	var/icon/corners = icon(door_state)
	corners.DrawBox(null, 7, 32, 26, 32)
	corners.DrawBox(null, 6, 31, 27, 31)
	corners.DrawBox(null, 5, 30, 28, 30)
	corners.DrawBox(null, 4, 29, 29, 29)
	corners.DrawBox(null, 3, 28, 30, 28)
	corners.DrawBox(null, 2, 27, 31, 27)
	corners.DrawBox(null, 1, 26, 32, 7)
	corners.DrawBox(null, 2, 6, 31, 6)
	corners.DrawBox(null, 3, 5, 30, 5)
	corners.DrawBox(null, 4, 4, 29, 4)
	corners.DrawBox(null, 5, 3, 28, 3)
	corners.DrawBox(null, 6, 2, 27, 2)
	corners.DrawBox(null, 7, 1, 26, 1)
	var/icon/tlframe = icon(door_state)
	tlframe.DrawBox(null, 1, 15, 32, 1)
	tlframe.DrawBox(null, 5, 16, 12, 16)
	tlframe.DrawBox(null, 16, 16)
	tlframe.DrawBox(null, 18, 32, 32, 16)
	tlframe.DrawBox(null, 17, 16, 17, 20)
	tlframe.DrawBox(null, 17, 29, 17, 32)
	tlframe.Shift(NORTH, 11)
	tlframe.Shift(WEST, 11)
	var/icon/blframe = icon(door_state)
	blframe.DrawBox(null, 1, 18, 32, 32)
	blframe.DrawBox(null, 1, 17, 4, 17)
	blframe.DrawBox(null, 13, 17, 17, 17)
	blframe.DrawBox(null, 17, 16)
	blframe.DrawBox(null, 18, 17, 32, 1)
	blframe.DrawBox(null, 17, 5, 17, 12)
	blframe.Shift(SOUTH, 11)
	blframe.Shift(WEST, 11)
	var/icon/trframe = icon(door_state)
	trframe.DrawBox(null, 1, 32, 15, 1)
	trframe.DrawBox(null, 16, 28, 16, 21)
	trframe.DrawBox(null, 16, 17)
	trframe.DrawBox(null, 16, 15, 32, 1)
	trframe.DrawBox(null, 16, 16, 20, 16)
	trframe.DrawBox(null,29, 16, 32, 16)
	trframe.Shift(NORTH, 11)
	trframe.Shift(EAST, 11)
	var/icon/brframe = icon(door_state)
	brframe.DrawBox(null, 1, 1, 15, 32)
	brframe.DrawBox(null, 16, 1, 16, 4)
	brframe.DrawBox(null, 16, 13, 16, 17)
	brframe.DrawBox(null, 17, 17)
	brframe.DrawBox(null, 21, 17, 28, 17)
	brframe.DrawBox(null, 16, 32, 32, 18)
	brframe.Shift(SOUTH, 11)
	brframe.Shift(EAST, 11)
	tlframe.Blend(trframe,ICON_OVERLAY,1,1)
	tlframe.Blend(blframe,ICON_OVERLAY,1,1)
	tlframe.Blend(brframe,ICON_OVERLAY,1,1)
	tlframe.Blend(corners,ICON_OVERLAY,1,1)
	outputIcon.Insert(tlframe, statename)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating locked door icon
/proc/HatchDoorLockedState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(HDorange,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating deny door animation
/proc/HatchDoorDenyState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(HDred,ICON_OVERLAY,1,1)
	base_door.Blend(HDpanelred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 1)
	base_door = icon(door_state)
	base_door.Blend(HDred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 2)
	base_door = icon(door_state)
	base_door.Blend(HDred,ICON_OVERLAY,1,1)
	base_door.Blend(HDpanelred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 3)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating door sparking animation
/proc/HatchDoorSparksState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(HDsparks1,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 1)
	base_door = icon(door_state)
	base_door.Blend(HDpanelred,ICON_OVERLAY,1,1)
	base_door.Blend(HDred,ICON_OVERLAY,1,1)
	base_door.Blend(HDsparks2,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 2)
	base_door = icon(door_state)
	base_door.Blend(HDsparks3,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 3)
	base_door = icon(door_state)
	base_door.Blend(HDpanelgreen,ICON_OVERLAY,1,1)
	base_door.Blend(HDgreen,ICON_OVERLAY,1,1)
	base_door.Blend(HDsparks4,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 4)
	base_door = icon(door_state)
	base_door.Blend(HDsparks5,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 5)
	base_door = icon(door_state)
	base_door.Blend(HDred,ICON_OVERLAY,1,1)
	base_door.Blend(HDsparks6,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 6)
	fcopy(outputIcon, "Output/[filename]")