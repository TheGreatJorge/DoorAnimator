//Main HazardDoor animating proc
/proc/HazardDoorAnimator(dmifile as icon)
	var/icon/oframe = icon(base_door)
	oframe.DrawBox(null, 5, 31, 28, 31)
	oframe.DrawBox(null, 4, 30, 29, 3)
	oframe.DrawBox(null, 5, 2, 28, 2)
	if(closing)
		var/icon/frame = icon(base_door)
		outputIcon.Insert(frame, statename, frame = 15, delay = 1.6)
		for(FRAME_N2 = 14, FRAME_N2 > 0, FRAME_N2--)
			outputIcon += icon(filename)
			var/icon/tframe = icon(base_door)
			tframe.DrawBox(null, 1, 15, 32, 1)
			tframe.DrawBox(null, 1, 16, 5, 16)
			tframe.DrawBox(null, 28, 16, 32, 16)
			tframe.DrawBox(null, 13, 16, 20, 16)
			tframe.DrawBox(null, 32, 1, 32, 33 - FRAME_N1)
			tframe.Shift(NORTH, FRAME_N1)
			var/icon/bframe = icon(base_door)
			bframe.DrawBox(null, 1, 17, 32, 32)
			bframe.DrawBox(null, 6, 16, 12, 16)
			bframe.DrawBox(null, 21, 16, 27, 16)
			bframe.DrawBox(null, 1, 1, 32, FRAME_N1)
			bframe.Shift(SOUTH, FRAME_N1)
			tframe.Blend(bframe,ICON_OVERLAY,1,1)
			tframe.Blend(oframe,ICON_OVERLAY,1,1)
			switch(FRAME_N2)
				if(1)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 1.5)
				if(2,3,13,14)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 1)
				if(4,12)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 0.9)
				if(10,11)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 0.8)
				if(9)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 0.6)
				if(5,6,8)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 0.5)
				if(7)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 0.4)
			FRAME_N1++
		fcopy(outputIcon, "Output/[filename]")
	else
		var/icon/frame = icon(base_door)
		outputIcon.Insert(frame, statename, frame = 1, delay = 1.5)
		for(FRAME_N2 = 2, FRAME_N2 < 16, FRAME_N2++)
			outputIcon += icon(filename)
			var/icon/tframe = icon(base_door)
			tframe.DrawBox(null, 1, 15, 32, 1)
			tframe.DrawBox(null, 1, 16, 5, 16)
			tframe.DrawBox(null, 28, 16, 32, 16)
			tframe.DrawBox(null, 13, 16, 20, 16)
			tframe.DrawBox(null, 32, 1, 32, 33 - FRAME_N1)
			tframe.Shift(NORTH, FRAME_N1)
			var/icon/bframe = icon(base_door)
			bframe.DrawBox(null, 1, 17, 32, 32)
			bframe.DrawBox(null, 6, 16, 12, 16)
			bframe.DrawBox(null, 21, 16, 27, 16)
			bframe.DrawBox(null, 1, 1, 32, FRAME_N1)
			bframe.Shift(SOUTH, FRAME_N1)
			tframe.Blend(bframe,ICON_OVERLAY,1,1)
			tframe.Blend(oframe,ICON_OVERLAY,1,1)
			switch(FRAME_N2)
				if(2,3,13,14)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 1)
				if(4,12)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 0.9)
				if(10,11)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 0.8)
				if(9)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 0.6)
				if(5,6,8)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 0.5)
				if(7)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 0.4)
				if(15)outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = 1.6)
			FRAME_N1++
		fcopy(outputIcon, "Output/[filename]")
	FRAME_N1 = 1 //reset values for next icon
	FRAME_N2 = 1
	closing = 0

//secondary proc for generating opened door icon
/proc/HazardDoorOpenState(dmifile as icon)
	var/icon/frame = icon(door_state)
	frame.DrawBox(null, 5, 31, 28, 31)
	frame.DrawBox(null, 4, 30, 29, 3)
	frame.DrawBox(null, 5, 2, 28, 2)
	var/icon/tframe = icon(door_state)
	tframe.DrawBox(null, 1, 15, 32, 1)
	tframe.DrawBox(null, 1, 16, 5, 16)
	tframe.DrawBox(null, 28, 16, 32, 16)
	tframe.DrawBox(null, 13, 16, 20, 16)
	tframe.Shift(NORTH, 14)
	var/icon/bframe = icon(door_state)
	bframe.DrawBox(null, 1, 17, 32, 32)
	bframe.DrawBox(null, 6, 16, 12, 16)
	bframe.DrawBox(null, 21, 16, 27, 16)
	bframe.Shift(SOUTH, 14)
	tframe.Blend(bframe,ICON_OVERLAY,1,1)
	tframe.Blend(frame,ICON_OVERLAY,1,1)
	tframe.Blend(HAZDgreen,ICON_OVERLAY,1,1)
	outputIcon.Insert(tframe, statename)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating locked door icon
/proc/HazardDoorLockedState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(HAZDred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating deny door animation
/proc/HazardDoorDenyState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(HAZDred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 1)
	base_door = icon(door_state)
	outputIcon.Insert(base_door, statename, frame = 2)
	base_door = icon(door_state)
	base_door.Blend(HAZDred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 3)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating hazard door anchored state
/proc/HazardDoorAnchoredState(dmifile as icon)
	var/icon/frame = icon(door_state)
	frame.DrawBox(null, 5, 31, 28, 31)
	frame.DrawBox(null, 4, 30, 29, 3)
	frame.DrawBox(null, 5, 2, 28, 2)
	var/icon/tframe = icon(base_door)
	tframe.DrawBox(null, 1, 15, 32, 1)
	tframe.DrawBox(null, 1, 16, 5, 16)
	tframe.DrawBox(null, 28, 16, 32, 16)
	tframe.DrawBox(null, 13, 16, 20, 16)
	tframe.Shift(NORTH, 10)
	var/icon/bframe = icon(base_door)
	bframe.DrawBox(null, 1, 17, 32, 32)
	bframe.DrawBox(null, 6, 16, 12, 16)
	bframe.DrawBox(null, 21, 16, 27, 16)
	bframe.Shift(SOUTH, 10)
	tframe.Blend(bframe,ICON_OVERLAY,1,1)
	tframe.Blend(frame,ICON_OVERLAY,1,1)
	tframe.Blend(HAZDpanel_open2,ICON_OVERLAY,1,1)
	outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = FRAME_DELAY)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating hazard door in-construction state
/proc/HazardDoorConstructionState(dmifile as icon)
	var/icon/frame = icon(door_state)
	frame.DrawBox(null, 5, 31, 28, 31)
	frame.DrawBox(null, 4, 30, 29, 3)
	frame.DrawBox(null, 5, 2, 28, 2)
	var/icon/tframe = icon(base_door)
	tframe.DrawBox(null, 1, 15, 32, 1)
	tframe.DrawBox(null, 1, 16, 5, 16)
	tframe.DrawBox(null, 28, 16, 32, 16)
	tframe.DrawBox(null, 13, 16, 20, 16)
	tframe.Shift(NORTH, 4)
	var/icon/bframe = icon(base_door)
	bframe.DrawBox(null, 1, 17, 32, 32)
	bframe.DrawBox(null, 6, 16, 12, 16)
	bframe.DrawBox(null, 21, 16, 27, 16)
	bframe.Shift(SOUTH, 4)
	tframe.Blend(bframe,ICON_OVERLAY,1,1)
	tframe.Blend(frame,ICON_OVERLAY,1,1)
	tframe.Blend(HAZDpanel_open,ICON_OVERLAY,1,1)
	outputIcon.Insert(tframe, statename, frame = FRAME_N2, delay = FRAME_DELAY)
	fcopy(outputIcon, "Output/[filename]")