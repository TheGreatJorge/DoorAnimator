//Main HighSecDoor animating proc
/proc/HighSecDoorAnimator(dmifile as icon)
	if(closing)
		var/icon/frame = icon(base_door)
		outputIcon.Insert(frame, statename, frame = 15, delay = 1.8)
		for(FRAME_N2 = 14, FRAME_N2 > 0, FRAME_N2--)
			outputIcon += icon(filename)
			var/icon/spikesleft = icon(HISEDspikes_left)
			var/icon/spikesright = icon(HISEDspikes_right)
			var/icon/lframe = icon(base_door)
			lframe.DrawBox(null, 18, 32, 32, 1)
			lframe.DrawBox(null, 17, 19, 17, 15)
			lframe.DrawBox(null, 16, 19, 16, 15)
			lframe.DrawBox(null, 15, 18, 15, 16)
			lframe.DrawBox(null, 1, 32, FRAME_N1, 1)
			var/icon/rframe = icon(base_door)
			rframe.DrawBox(null, 1, 1, 16, 13)
			rframe.DrawBox(null, 1, 32, 16, 21)
			rframe.DrawBox(null, 1, 20, 15, 20)
			rframe.DrawBox(null, 1, 19, 14, 19)
			rframe.DrawBox(null, 1, 18, 13, 16)
			rframe.DrawBox(null, 1, 14, 15, 14)
			rframe.DrawBox(null, 1, 15, 14, 15)
			rframe.DrawBox(null, 32, 32, 33 - FRAME_N1, 1)
			lframe.Blend(spikesleft,ICON_OVERLAY,1,1)
			lframe.Shift(WEST, FRAME_N1)
			spikesright.Shift(EAST, FRAME_N1)
			lframe.Blend(spikesright,ICON_UNDERLAY,1,1)
			rframe.Shift(EAST, FRAME_N1)
			lframe.Blend(rframe,ICON_OVERLAY,1,1)
			switch(FRAME_N2)
				if(1)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1.7)
				if(2,3,13,14)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1.2)
				if(4,12)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1.1)
				if(10,11)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1)
				if(9)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.8)
				if(5,6,8)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.7)
				if(7)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.6)
			FRAME_N1++
		fcopy(outputIcon, "Output/[filename]")
	else
		var/icon/frame = icon(base_door)
		outputIcon.Insert(frame, statename, frame = 1, delay = 1.7)
		for(FRAME_N2 = 2, FRAME_N2 < 16, FRAME_N2++)
			outputIcon += icon(filename)
			var/icon/spikesleft = icon(HISEDspikes_left)
			var/icon/spikesright = icon(HISEDspikes_right)
			var/icon/lframe = icon(base_door)
			lframe.DrawBox(null, 18, 32, 32, 1)
			lframe.DrawBox(null, 17, 19, 17, 15)
			lframe.DrawBox(null, 16, 19, 16, 15)
			lframe.DrawBox(null, 15, 18, 15, 16)
			lframe.DrawBox(null, 1, 32, FRAME_N1, 1)
			var/icon/rframe = icon(base_door)
			rframe.DrawBox(null, 1, 1, 16, 13)
			rframe.DrawBox(null, 1, 32, 16, 21)
			rframe.DrawBox(null, 1, 20, 15, 20)
			rframe.DrawBox(null, 1, 19, 14, 19)
			rframe.DrawBox(null, 1, 18, 13, 16)
			rframe.DrawBox(null, 1, 14, 15, 14)
			rframe.DrawBox(null, 1, 15, 14, 15)
			rframe.DrawBox(null, 32, 32, 33 - FRAME_N1, 1)
			lframe.Blend(spikesleft,ICON_OVERLAY,1,1)
			lframe.Shift(WEST, FRAME_N1)
			spikesright.Shift(EAST, FRAME_N1)
			lframe.Blend(spikesright,ICON_UNDERLAY,1,1)
			rframe.Shift(EAST, FRAME_N1)
			lframe.Blend(rframe,ICON_OVERLAY,1,1)
			switch(FRAME_N2)
				if(2,3,13,14)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1.2)
				if(4,12)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1.1)
				if(10,11)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1)
				if(9)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.8)
				if(5,6,8)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.7)
				if(7)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.6)
				if(15)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1.8)
			FRAME_N1++
		fcopy(outputIcon, "Output/[filename]")
	FRAME_N1 = 1 //reset values for next icon
	FRAME_N2 = 1
	closing = 0

//secondary proc for generating opened door icon
/proc/HighSecDoorOpenState(dmifile as icon)
	var/icon/spikesleft = icon(HISEDspikes_left)
	var/icon/spikesright = icon(HISEDspikes_right)
	var/icon/lframe = icon(door_state)
	lframe.DrawBox(null, 18, 32, 32, 1)
	lframe.DrawBox(null, 17, 19, 17, 15)
	lframe.DrawBox(null, 16, 19, 16, 15)
	lframe.DrawBox(null, 15, 18, 15, 16)
	lframe.DrawBox(null, 1, 32, 14, 1)
	var/icon/rframe = icon(door_state)
	rframe.DrawBox(null, 1, 1, 16, 13)
	rframe.DrawBox(null, 1, 32, 16, 21)
	rframe.DrawBox(null, 1, 20, 15, 20)
	rframe.DrawBox(null, 1, 19, 14, 19)
	rframe.DrawBox(null, 1, 18, 13, 16)
	rframe.DrawBox(null, 1, 14, 15, 14)
	rframe.DrawBox(null, 1, 15, 14, 15)
	rframe.DrawBox(null, 32, 32, 19, 1)
	lframe.Blend(spikesleft,ICON_OVERLAY,1,1)
	lframe.Shift(WEST, 14)
	spikesright.Shift(EAST, 14)
	lframe.Blend(spikesright,ICON_UNDERLAY,1,1)
	rframe.Shift(EAST, 14)
	lframe.Blend(rframe,ICON_OVERLAY,1,1)
	outputIcon.Insert(lframe, statename)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating locked door icon
/proc/HighSecDoorLockedState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(HISEDred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating deny door animation
/proc/HighSecDoorDenyState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(HISEDred,ICON_OVERLAY,1,1)
	base_door.Blend(HISEDpanelred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 1)
	base_door = icon(door_state)
	base_door.Blend(HISEDred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 2)
	base_door = icon(door_state)
	base_door.Blend(HISEDred,ICON_OVERLAY,1,1)
	base_door.Blend(HISEDpanelred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 3)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating door sparking animation
/proc/HighSecDoorSparksState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(HISEDsparks1,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 1)
	base_door = icon(door_state)
	base_door.Blend(HISEDpanelgreen,ICON_OVERLAY,1,1)
	base_door.Blend(HISEDgreen,ICON_OVERLAY,1,1)
	base_door.Blend(HISEDsparks2,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 2)
	base_door = icon(door_state)
	base_door.Blend(HISEDsparks3,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 3)
	base_door = icon(door_state)
	base_door.Blend(HISEDpanelred,ICON_OVERLAY,1,1)
	base_door.Blend(HISEDred,ICON_OVERLAY,1,1)
	base_door.Blend(HISEDsparks4,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 4)
	base_door = icon(door_state)
	base_door.Blend(HISEDsparks5,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 5)
	base_door.Blend(HISEDpanelgreen,ICON_OVERLAY,1,1)
	base_door.Blend(HISEDgreen,ICON_OVERLAY,1,1)
	base_door.Blend(HISEDsparks6,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 6)
	fcopy(outputIcon, "Output/[filename]")