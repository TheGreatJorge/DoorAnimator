//Main IndustrialDoor animating proc
/proc/IndustrialDoorAnimator(dmifile as icon)
	if(closing)
		var/icon/frame = icon(base_door)
		outputIcon.Insert(frame, statename, frame = 14, delay = 1.6)
		for(FRAME_N2 = 13, FRAME_N2 > 0, FRAME_N2--)
			outputIcon += icon(filename)
			var/icon/lframe = icon(base_door)
			lframe.DrawBox(null, 19, 1, 32, 32)
			lframe.DrawBox(null, 17, 1, 18, 5)
			lframe.DrawBox(null, 18, 6)
			lframe.DrawBox(null, 18, 13, 18, 20)
			lframe.DrawBox(null, 17, 14, 17, 19)
			lframe.DrawBox(null, 18, 27)
			lframe.DrawBox(null, 17, 28, 18, 32)
			lframe.DrawBox(null, 1, 32, FRAME_N1, 1)
			lframe.Shift(WEST, FRAME_N1)
			var/icon/rframe = icon(base_door)
			rframe.DrawBox(null, 1, 32, 15, 1)
			rframe.DrawBox(null, 16, 6, 16, 13)
			rframe.DrawBox(null, 17, 7, 17, 12)
			rframe.DrawBox(null, 16, 20, 16, 27)
			rframe.DrawBox(null, 17, 21, 17, 26)
			rframe.DrawBox(null, 32, 32, 33 - FRAME_N1, 1)
			rframe.Shift(EAST, FRAME_N1)
			lframe.Blend(rframe,ICON_OVERLAY,1,1)
			switch(FRAME_N2)
				if(1)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1.5)
				if(2,3,13)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1)
				if(4,12)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.9)
				if(10,11)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.8)
				if(9)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.6)
				if(5,6,8)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.5)
				if(7)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.4)
			FRAME_N1++
		fcopy(outputIcon, "Output/[filename]")
	else
		var/icon/frame = icon(base_door)
		outputIcon.Insert(frame, statename, frame = 1, delay = 1.5)
		for(FRAME_N2 = 2, FRAME_N2 < 15, FRAME_N2++)
			outputIcon += icon(filename)
			var/icon/lframe = icon(base_door)
			lframe.DrawBox(null, 19, 1, 32, 32)
			lframe.DrawBox(null, 17, 1, 18, 5)
			lframe.DrawBox(null, 18, 6)
			lframe.DrawBox(null, 18, 13, 18, 20)
			lframe.DrawBox(null, 17, 14, 17, 19)
			lframe.DrawBox(null, 18, 27)
			lframe.DrawBox(null, 17, 28, 18, 32)
			lframe.DrawBox(null, 1, 32, FRAME_N1, 1)
			lframe.Shift(WEST, FRAME_N1)
			var/icon/rframe = icon(base_door)
			rframe.DrawBox(null, 1, 32, 15, 1)
			rframe.DrawBox(null, 16, 6, 16, 13)
			rframe.DrawBox(null, 17, 7, 17, 12)
			rframe.DrawBox(null, 16, 20, 16, 27)
			rframe.DrawBox(null, 17, 21, 17, 26)
			rframe.DrawBox(null, 32, 32, 33 - FRAME_N1, 1)
			rframe.Shift(EAST, FRAME_N1)
			lframe.Blend(rframe,ICON_OVERLAY,1,1)
			switch(FRAME_N2)
				if(2,3,13)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1)
				if(4,12)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.9)
				if(10,11)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.8)
				if(9)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.6)
				if(5,6,8)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.5)
				if(7)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 0.4)
				if(14)outputIcon.Insert(lframe, statename, frame = FRAME_N2, delay = 1.6)
			FRAME_N1++
		fcopy(outputIcon, "Output/[filename]")
	FRAME_N1 = 1 //reset values for next icon
	FRAME_N2 = 1
	closing = 0

//secondary proc for generating opened door icon
/proc/IndustrialDoorOpenState(dmifile as icon)
	var/icon/lframe = icon(door_state)
	lframe.DrawBox(null, 19, 1, 32, 32)
	lframe.DrawBox(null, 17, 1, 18, 5)
	lframe.DrawBox(null, 18, 6)
	lframe.DrawBox(null, 18, 13, 18, 20)
	lframe.DrawBox(null, 17, 14, 17, 19)
	lframe.DrawBox(null, 18, 27)
	lframe.DrawBox(null, 17, 28, 18, 32)
	lframe.Shift(WEST, 13)
	var/icon/rframe = icon(door_state)
	rframe.DrawBox(null, 1, 32, 15, 1)
	rframe.DrawBox(null, 16, 6, 16, 13)
	rframe.DrawBox(null, 17, 7, 17, 12)
	rframe.DrawBox(null, 16, 20, 16, 27)
	rframe.DrawBox(null, 17, 21, 17, 26)
	rframe.Shift(EAST, 13)
	lframe.Blend(rframe,ICON_OVERLAY,1,1)
	outputIcon.Insert(lframe, statename)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating locked door icon
/proc/IndustrialDoorLockedState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(IDred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating deny door animation
/proc/IndustrialDoorDenyState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(IDred,ICON_OVERLAY,1,1)
	base_door.Blend(IDpanelred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 1)
	base_door = icon(door_state)
	base_door.Blend(IDred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 2)
	base_door = icon(door_state)
	base_door.Blend(IDred,ICON_OVERLAY,1,1)
	base_door.Blend(IDpanelred,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 3)
	fcopy(outputIcon, "Output/[filename]")

//secondary proc for generating door sparking animation
/proc/IndustrialDoorSparksState(dmifile as icon)
	base_door = icon(door_state)
	base_door.Blend(IDsparks1,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 1)
	base_door = icon(door_state)
	base_door.Blend(IDpanelred,ICON_OVERLAY,1,1)
	base_door.Blend(IDred,ICON_OVERLAY,1,1)
	base_door.Blend(IDsparks2,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 2)
	base_door = icon(door_state)
	base_door.Blend(IDsparks3,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 3)
	base_door = icon(door_state)
	base_door.Blend(IDpanelgreen,ICON_OVERLAY,1,1)
	base_door.Blend(IDgreen,ICON_OVERLAY,1,1)
	base_door.Blend(IDsparks4,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 4)
	base_door = icon(door_state)
	base_door.Blend(IDsparks5,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 5)
	base_door = icon(door_state)
	base_door.Blend(IDred,ICON_OVERLAY,1,1)
	base_door.Blend(IDsparks6,ICON_OVERLAY,1,1)
	outputIcon.Insert(base_door, statename, frame = 6)
	fcopy(outputIcon, "Output/[filename]")